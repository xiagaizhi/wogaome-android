
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
package="com.yushi.leke.plugin.musicplayer" >

<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.WAKE_LOCK" />
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

<!-- Set android.software.leanback to false, so the APK will be available to both
TV and regular devices. -->
<uses-feature
    android:name="android.software.leanback"
    android:required="false" />
<uses-feature
    android:name="android.hardware.touchscreen"
    android:required="false" />

<application
    android:allowBackup="true"
    android:icon="@drawable/ic_launcher"
    android:label="@string/app_name"
    android:theme="@style/UAmpAppTheme"
    android:banner="@drawable/banner_tv">


    <!-- Main activity for music browsing on phone -->
    <activity
        android:name=".uamp.ui.FullScreenPlayerActivity"
        android:label="@string/app_name">

    </activity>


    <!--
         (OPTIONAL) use this meta data to indicate which icon should be
         used in Android Auto media notifications (for example, when the
         music changes and the user is looking at another app)
    -->
    <meta-data
        android:name="com.google.android.gms.car.notification.SmallIcon"
        android:resource="@drawable/ic_notification" />

    <!--
         (OPTIONAL) use this meta data to override the theme from which Android Auto will
         look for colors. If you don't set this, Android Auto will look
         for color attributes in your application theme.
    -->

    <!-- Main music service, provides media browsing and media playback services to
     consumers through MediaBrowserService and MediaSession. Consumers connect to it through
     MediaBrowser (for browsing) and MediaController (for play session control) -->
    <service
        android:name=".uamp.MusicService"
        android:exported="true"
        tools:ignore="ExportedService">
        <intent-filter>
            <action android:name="android.media.browse.MediaBrowserService" />
        </intent-filter>
    </service>

    <!--
         (REQUIRED) use this meta data to to declare the app OptionsProvider.
    -->


    <!-- A receiver that will receive media buttons and send as
        intents to your MediaBrowserServiceCompat implementation.
        Required on pre-Lollipop. More information at
        http://developer.android.com/reference/android/support/v4/media/session/MediaButtonReceiver.html -->
    <receiver android:name="android.support.v4.media.session.MediaButtonReceiver" >
        <intent-filter>
            <action android:name="android.intent.action.MEDIA_BUTTON" />
        </intent-filter>
    </receiver>

</application>

</manifest>
